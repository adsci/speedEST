name: 'CI and build dev image'

on:
  push:
    branches: [ "**", "!main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  ci:
    runs-on: [ ubuntu-latest ]
    needs: build-dev-image
    name: CI
    steps:
      - name: CI
        shell: bash
        run: |
          echo CI

  build-dev-image:
    runs-on: [ ubuntu-latest ]
    needs: [ ci-linter, ci-tester ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Get timestamp
        shell: bash
        run: echo timestamp=$(date +"%s") >> $GITHUB_OUTPUT
        id: get_timestamp

      - name: Get next version
        id: bump
        uses: allegro-actions/next-version@v1
        with:
          prefix: ''

      - name: Set app version
        id: set_version
        shell: bash
        env:
          APP_VERSION: "${{ steps.bump.outputs.next_tag }}.dev${{ steps.get_timestamp.outputs.timestamp }}"
        run: |
          make set-app-version
          echo app_version=$APP_VERSION >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: adsci/speedest:${{ steps.set_version.outputs.app_version }}

  ci-linter:
    runs-on: [ ubuntu-latest ]
    name: linter
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install pre-commit
        shell: bash
        run: grep "pre-commit" requirements/dev.in | xargs python -m pip install

      - name: Run pre-commit checks
        shell: bash
        run: make lint

  ci-tester:
    runs-on: [ ubuntu-latest ]
    name: tester
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install tox
        shell: bash
        run: grep "tox" requirements/dev.in | xargs python -m pip install

      - name: Run tests
        shell: bash
        run: make test
